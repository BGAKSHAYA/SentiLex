CMAKE_MINIMUM_REQUIRED(VERSION 2.8.11)

PROJECT(vec2dic)

FIND_PACKAGE(Armadillo)
FIND_PACKAGE (Threads)
FIND_PACKAGE(Doxygen QUIET)
IF(DOXYGEN_FOUND)
	CONFIGURE_FILE(${CMAKE_CURRENT_SOURCE_DIR}/Doxyfile.in ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile @ONLY)
	ADD_CUSTOM_TARGET(doc
		${DOXYGEN_EXECUTABLE} ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile
		WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}
		COMMENT "Generating API documentation with Doxygen" VERBATIM
		)
ENDIF(DOXYGEN_FOUND)

ADD_DEFINITIONS(-Wall -Wextra -fopenmp  -funroll-loops #
		      -march=native -funroll-loops -Ofast)
IF(BUILD_VEC2DIC)
	add_definitions(-std=c++11)
ENDIF(BUILD_VEC2DIC)

# set variables
SET(V2D_SRC_DIR src/vec2dic CACHE FILEPATH "Default directory containing vec2dic source files")
SET(W2V_SRC_DIR src/word2vec CACHE FILEPATH "Default directory containing word2vec source files")

# specify target directory
SET(EXECUTABLE_OUTPUT_PATH bin)

# define targets
AUX_SOURCE_DIRECTORY(${V2D_SRC_DIR} V2D_SOURCES)
ADD_EXECUTABLE(vec2dic ${V2D_SOURCES})
TARGET_INCLUDE_DIRECTORIES(vec2dic PRIVATE ${V2D_SRC_DIR})
TARGET_LINK_LIBRARIES(vec2dic ${ARMADILLO_LIBRARIES})
SET_TARGET_PROPERTIES(vec2dic
                               PROPERTIES COMPILE_FLAGS "-std=c++11")

AUX_SOURCE_DIRECTORY(${W2V_SRC_DIR} W2V_SOURCES)
ADD_EXECUTABLE(word2vec ${W2V_SOURCES})
TARGET_LINK_LIBRARIES(word2vec m ${CMAKE_THREAD_LIBS_INIT})
